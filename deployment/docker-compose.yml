version: '3.8'

services:
  # Main API Gateway
  api-gateway:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: mlops-api-gateway
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=info
    volumes:
      - ../services:/app/services
      - ../shared:/app/shared
      - model-checkpoints:/app/checkpoints
      - training-data:/app/data
    networks:
      - mlops-network
    restart: unless-stopped
    depends_on:
      - prometheus
      - grafana

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: mlops-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - mlops-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mlops-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - mlops-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Redis for caching (optional)
  redis:
    image: redis:alpine
    container_name: mlops-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mlops-network
    restart: unless-stopped

networks:
  mlops-network:
    driver: bridge

volumes:
  model-checkpoints:
    driver: local
  training-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  redis-data:
    driver: local
